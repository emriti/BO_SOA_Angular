package api.services;

import java.util.ArrayList;
import java.util.List;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import org.json.JSONException;
import org.json.JSONObject;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import bo.entities.ReconcilliationMaster;
import bo.services.ReconcilliationService;

@Path("/reconcilliation_service")
public class ReconcilliationApiService {

	@GET
	@Produces("application/json")
	public Response get() throws JSONException, JsonProcessingException {
		ObjectMapper mapper = new ObjectMapper();
		String result = mapper.writeValueAsString((new ReconcilliationService()).findAll());
		return Response.status(200).entity(result).build();
	}

	@Path("{reconNo}")
	@GET
	@Produces("application/json")
	public Response getByReconNo(@PathParam("reconNo") String reconNo) throws JSONException, JsonProcessingException {
		ObjectMapper mapper = new ObjectMapper();
		String result = mapper.writeValueAsString((new ReconcilliationService().findByReconNo(reconNo)));
		return Response.status(200).entity(result).build();
	}

}
