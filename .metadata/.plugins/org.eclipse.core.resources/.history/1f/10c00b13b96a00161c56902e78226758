package wsclient.WSClient;

import java.io.IOException;
import java.util.Date;
import java.util.List;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.Form;
import javax.ws.rs.core.MediaType;

import org.glassfish.jersey.client.ClientConfig;
import org.glassfish.jersey.filter.LoggingFilter;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import bo.entities.ReconcilliationMaster;

/**
 * Hello world!
 *
 */
public class App {

	private static final String url = "http://localhost:8080/ModelService/services/reconcilliation_service";

	public static void main(String[] args) {
		try {
			// getAll();
			// getByReconNo("REC-001");
			//delete();
			insert();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static void getAll() throws JsonParseException, JsonMappingException, IOException {
		ClientConfig config = new ClientConfig();
		Client client = ClientBuilder.newClient(config);
		WebTarget target = client.target(url);
		String str = target.path("recon").request().accept(MediaType.APPLICATION_JSON).get(String.class);

		ObjectMapper map = new ObjectMapper();
		List<ReconcilliationMaster> masters = map.readValue(str, new TypeReference<List<ReconcilliationMaster>>() {
		});
		System.out.println(str);
		for (ReconcilliationMaster master : masters) {
			System.out.println(master.getReconcileNo());
		}
	}

	private static void getByReconNo(String reconNo) throws Exception {
		ClientConfig config = new ClientConfig();
		Client client = ClientBuilder.newClient(config);
		WebTarget target = client.target(url);
		String str = target.path("recon").path(reconNo).request().accept(MediaType.APPLICATION_JSON).get(String.class);

		ObjectMapper map = new ObjectMapper();
		ReconcilliationMaster master = map.readValue(str, ReconcilliationMaster.class);
		System.out.println(str);
		System.out.println(master.getReconcileNo());
	}

	private static void insert() {
		ClientConfig config = new ClientConfig();
		Client client = ClientBuilder.newClient(config);
		client.register(new LoggingFilter());
		WebTarget target = client.target(url);

		Form form = new Form();
		form.param("reconcileNo", "REC-004");
		form.param("reconcileDate", "08/28/2016");
		form.param("paymentTypeId", "17");
		form.param("balanceSnapshot", "1100");
		form.param("nextPaymentAmount", "600");
		form.param("penihilanAmount", "500");
		form.param("createdBy", "admin");

		String callResult = target.path("recon").request(MediaType.TEXT_PLAIN)
				.post(Entity.entity(form, MediaType.APPLICATION_JSON), String.class);
		System.out.println(callResult);
	}

	private static void delete() {
		ClientConfig config = new ClientConfig();
		Client client = ClientBuilder.newClient(config);
		WebTarget target = client.target(url);
		String callResult = target.path("recon").path("REC-003").request().accept(MediaType.TEXT_PLAIN).delete(String.class);
		System.out.println(callResult);
	}

}
